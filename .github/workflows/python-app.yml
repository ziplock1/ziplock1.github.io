# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Run aup_upload Script

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 */3 * * *'  # Запуск каждые 3 часа (в 00 минут каждые 3-й часа)

permissions:
  contents: write  # Разрешение на запись для коммита в репозиторий

jobs:
  run_script:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  # Используем v3 для стабильности

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests  # Устанавливаем requests для вашего скрипта
        pip install xmltodict

    - name: Run aup_upload.py script
      env:
        XML_DATA_URL: ${{ secrets.XML_DATA_URL }}
        HTTP_PROXY: ${{ secrets.HTTP_PROXY }}
        HTTPS_PROXY: ${{ secrets.HTTPS_PROXY }}
        USE_PROXY: ${{ secrets.USE_PROXY }}  # 'true' or 'false'
      run: |
        python aup_upload.py  # Обновите путь, если необходимо

    - name: Check if output.json is created and not empty
      id: check_output_json
      run: |
        if [[ ! -f "output.json" ]]; then
          echo "Error: output.json was not created by the script."
          exit 1
        fi

        if [[ ! -s "output.json" ]]; then
          echo "Error: output.json is empty."
          exit 1
        fi

        echo "output.json exists and is not empty."
        cat output.json  # Выводим содержимое файла для отладки

    - name: Commit and push output.json to repository
      if: success()  # Выполняется только если предыдущие шаги завершились успешно
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add output.json
        git commit -m "Add output.json generated by aup_upload script" || echo "No changes to commit"
        git push origin main || echo "Failed to push changes"

    - name: Upload output.json as artifact
      uses: actions/upload-artifact@v4  # Используем последнюю стабильную версию
      with:
        name: output-json
        path: output.json  # Загружаем output.json как артефакт
